% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fs_methods.R
\name{mseq_fs}
\alias{mseq_fs}
\title{Modified Sequential Feature Selection}
\usage{
mseq_fs(input_data, sample_labels, n, verbose = FALSE)
}
\arguments{
\item{input_data}{[data.frame] a \code{data.frame} rows represent samples and
columns represent features (with beta values or methylation ratios).}

\item{sample_labels}{[factor] a \code{factor} of length == nrow(input_data),
containing the sample labels.}

\item{n}{[numeric] the max number of features to output and, at the same time
the max number of iterations of the algorithm.}

\item{verbose}{[logical] a logical indicating whether to status reports.
Default: FALSE.}
}
\value{
[character] A character vector with at most \code{n} selected
  features.
}
\description{
A modified version of Sequential Feature Selection algorithm.
}
\details{
This funtion implements a custom version of the Sequential Feature
  Selection algorithm. This wrapper is coupled to three classification
  algorithms (knn, C5.0 and lda) using \link[methylearning]{cls_fitness}
  function. An initial step is performing, selecting only those features
  obtaining an accuracy over random expect (0.5 in 2 class problems, 0.33 in
  3 class, etc.). On this initial selection, each feature is coupled with
  each other and the best performant couples are selected. The rest of the
  iterations adds one of the other initial features to each couple, with the
  only constrain that no repetition is allowed in each group. Best performant
  groups are selected in each iteration. Iteration stops when no improvement
  is achieaved in any of the additions or when the groups are of size
  \code{n}, which is first meet. If more than one group has the same accuracy
  by the \link[methylearning]{cls_fitness} function, only one is chosen at
  random.
}
\examples{
set.seed(1234)
input_data <- data.frame(a = runif(10, min = 0, max = 1),
                         b = runif(10, min = 0, max = 1),
                         c = runif(10, min = 0, max = 1),
                         d = runif(10, min = 0, max = 1))
sample_labels <- as.factor(c(rep("classA", 5), rep("classB", 5)))
features_selected <- mseq_fs(input_data, sample_labels, 50, 2)
print(features_selected)

}
